// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pharmacy.Store.Models;

#nullable disable

namespace Pharmacy.Store.Migrations
{
    [DbContext(typeof(PharmacyStoreDbContext))]
    [Migration("20250409191805_OrderAdded")]
    partial class OrderAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Pharmacy.Store.Models.Category", b =>
            {
                b.Property<int>("CategoryId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                b.Property<string>("CategoryName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Description")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("CategoryId");

                b.ToTable("Categories");
            });

            modelBuilder.Entity("Pharmacy.Store.Models.Medicament", b =>
            {
                b.Property<int>("MedicamentId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicamentId"), 1L, 1);

                b.Property<string>("AllergyInformation")
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("CategoryId")
                    .HasColumnType("int");

                b.Property<string>("ImageThumbnailUrl")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("ImageUrl")
                    .HasColumnType("nvarchar(max)");

                b.Property<bool>("InStock")
                    .HasColumnType("bit");

                b.Property<bool>("IsDiscountOfTheWeek")
                    .HasColumnType("bit");

                b.Property<string>("LongDescription")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<decimal>("Price")
                    .HasColumnType("decimal(18,2)");

                b.Property<string>("ShortDescription")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("MedicamentId");

                b.HasIndex("CategoryId");

                b.ToTable("Medicaments");
            });

            modelBuilder.Entity("Pharmacy.Store.Models.Order", b =>
            {
                b.Property<int>("OrderId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                b.Property<string>("AddressLine1")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<string>("AddressLine2")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("City")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<string>("Country")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<string>("FirstName")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<string>("LastName")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<DateTime>("OrderPlaced")
                    .HasColumnType("datetime2");

                b.Property<decimal>("OrderTotal")
                    .HasColumnType("decimal(18,2)");

                b.Property<string>("PhoneNumber")
                    .IsRequired()
                    .HasMaxLength(25)
                    .HasColumnType("nvarchar(25)");

                b.Property<string>("State")
                    .HasMaxLength(10)
                    .HasColumnType("nvarchar(10)");

                b.Property<string>("ZipCode")
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnType("nvarchar(10)");

                b.HasKey("OrderId");

                b.ToTable("Orders");
            });

            modelBuilder.Entity("Pharmacy.Store.Models.OrderDetail", b =>
            {
                b.Property<int>("OrderDetailId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"), 1L, 1);

                b.Property<int>("Amount")
                    .HasColumnType("int");

                b.Property<int>("MedicamentId")
                    .HasColumnType("int");

                b.Property<int>("OrderId")
                    .HasColumnType("int");

                b.Property<decimal>("Price")
                    .HasColumnType("decimal(18,2)");

                b.HasKey("OrderDetailId");

                b.HasIndex("MedicamentId");

                b.HasIndex("OrderId");

                b.ToTable("OrderDetails");
            });

            modelBuilder.Entity("Pharmacy.Store.Models.ShoppingCartItem", b =>
            {
                b.Property<int>("ShoppingCartItemId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShoppingCartItemId"), 1L, 1);

                b.Property<int>("Amount")
                    .HasColumnType("int");

                b.Property<int>("MedicamentId")
                    .HasColumnType("int");

                b.Property<string>("ShoppingCartId")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("ShoppingCartItemId");

                b.HasIndex("MedicamentId");

                b.ToTable("ShoppingCartItems");
            });

            modelBuilder.Entity("Pharmacy.Store.Models.Medicament", b =>
            {
                b.HasOne("Pharmacy.Store.Models.Category", "Category")
                    .WithMany("Medicaments")
                    .HasForeignKey("CategoryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Category");
            });

            modelBuilder.Entity("Pharmacy.Store.Models.OrderDetail", b =>
            {
                b.HasOne("Pharmacy.Store.Models.Medicament", "Medicament")
                    .WithMany()
                    .HasForeignKey("MedicamentId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("Pharmacy.Store.Models.Order", "Order")
                    .WithMany("OrderDetails")
                    .HasForeignKey("OrderId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Medicament");

                b.Navigation("Order");
            });

            modelBuilder.Entity("Pharmacy.Store.Models.ShoppingCartItem", b =>
            {
                b.HasOne("Pharmacy.Store.Models.Medicament", "Medicament")
                    .WithMany()
                    .HasForeignKey("MedicamentId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Medicament");
            });

            modelBuilder.Entity("Pharmacy.Store.Models.Category", b =>
            {
                b.Navigation("Medicaments");
            });

            modelBuilder.Entity("Pharmacy.Store.Models.Order", b =>
            {
                b.Navigation("OrderDetails");
            });
#pragma warning restore 612, 618
        }
    }
}
